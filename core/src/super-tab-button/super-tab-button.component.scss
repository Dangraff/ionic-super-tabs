@mixin labelIcon {
  ion-label, ion-icon, ::slotted(ion-label), ::slotted(ion-icon) {
    @content
  }
}

@mixin label {
  ion-label, ::slotted(ion-label) {
    @content
  }
}

@mixin icon {
  ion-icon, ::slotted(ion-icon) {
    @content
  }
}

:host {
  /**
   * @prop --st-label-color: Color of the label text. Defaults to `--ion-color-contrast`.
   * @prop --st-label-height: Height of the label. Defaults to `14px`.
   * @prop --st-label-font-size: Font size of the label. Defaults to `14px`.
   * @prop --st-label-text-transform: Text transformation to apply to the label text. Defaults to `uppercase`.
   * @prop --st-label-font-weight: Font weight of the label. Defaults to `500`
   * @prop --st-icon-color: Color of the icon. Defaults to `--ion-color-contrast`
   * @prop --st-icon-size: Size of the icon. Defaults to `24px`.
   */

  flex: 1 0 0;
  cursor: pointer;
  position: relative;
  max-width: 100%;
  overflow: hidden;
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
  transform: translate3d(0, 0, 0);
  height: 72px;
  padding: 0 24px;

  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -webkit-text-size-adjust: none;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-font-smoothing: antialiased;

  --st-base-color-active: var(--ion-color-contrast);
  --st-base-color-inactive: rgba(var(--ion-color-contrast-rgb), 0.7);

  --st-icon-size: 24px;
  --st-icon-color-inactive: var(--st-base-color-inactive);
  --st-icon-color-active: var(--st-base-color-active);

  --st-label-line-height: 14px;
  --st-label-height: 14px;
  --st-label-font-size: 14px;
  --st-label-text-transform: uppercase;
  --st-label-font-weight: 500;
  --st-label-padding-bottom: 16px;
  --st-label-color-inactive: var(--st-base-color-inactive);
  --st-label-color-active: var(--st-base-color-active);

  @include labelIcon {
    transition-property: all;
    transition-duration: 150ms;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-delay: 0s;
    box-sizing: content-box !important;
    -webkit-user-select: none;
    -webkit-text-size-adjust: none;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    -webkit-font-smoothing: antialiased;
  }

  @include label {
    color: var(--st-label-color-inactive);
    line-height: var(--st-label-line-height);
    height: var(--st-label-height);
    font-size: var(--st-label-font-size);
    text-transform: var(--st-label-text-transform);
    font-weight: var(--st-label-font-weight);
    padding-bottom: var(--st-label-padding-bottom);
  }

  @include icon {
    color: var(--st-icon-color-inactive);
    fill: var(--st-icon-color-inactive);
    min-height: var(--st-icon-size);
    min-width: var(--st-icon-size);
    font-size: var(--st-icon-size);
    padding-top: 12px;
  }
}

@media(hover: hover) {
  :host(:hover) {
    background: rgba(var(--ion-color-contrast-rgb), 0.04);
  }
}


:host(.active) {
  @include labelIcon {
    transition-delay: 75ms;
  }

  @include label {
    color: var(--st-label-color-active);
  }

  @include icon {
    color: var(--st-icon-color-active);
    fill: var(--st-icon-color-active);
  }
}

:host(.icon-only), :host(.label-only) {
  height: 48px;
  justify-content: center;
}

:host(.scrollableContainer) {
  flex-grow: 0;
  flex-basis: auto;
  min-width: 90px;
  max-width: 360px;
}

::slotted {
  flex-shrink: 1;
}

:host(.label-only) {
  @include label {
    padding-bottom: 0;
  }
}

:host(.icon-only) {
  @include icon {
    padding-top: 0;
  }
}
